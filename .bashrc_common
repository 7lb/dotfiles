################################################################################
# Prompt and prompt related
################################################################################

buildPrompt() {
	local exitCode="$?"
	local suffixPrivileged="# "
	local suffixUnprivileged="$ "

	local endColor="\[\e[0m\]"
	local redFg="\[\e[31m\]"
	local greenFg="\[\e[32m\]"
	local purpleFg="\[\e[35m\]"
	local yellowFg="\[\e[33m\]"

	local prompt="┌ "

	if [[ "$exitCode" != 0 ]]; then
		prompt+="${redFg}$exitCode${endColor} | "
	fi

	prompt+="\$(pwd)"

	if [[ "$(isInToolbox)" == 1 ]]; then
		prompt+=" | ${purpleFg}$(getCurrentToolboxName)${endColor}"
	fi

	if [[ "$(pwdIsGitRepo)" == 1 ]]; then
		prompt+=" | ${yellowFg}$(getCurrentGitBranch)${endColor}"
	fi

	prompt+="\n└ "
	if [[ "$(id -u)" == 0 ]]; then
		prompt+="$suffixPrivileged"
	else
		prompt+="$suffixUnprivileged"
	fi

	PS1="$prompt"
}

isInToolbox() {
	if [[ "$HOSTNAME" != "toolbx" ]]; then
		echo 0
	else
		echo 1
	fi
}

pwdIsGitRepo() {
	local gitDir="$(git rev-parse --git-dir 2> /dev/null)"
	if [[ "$gitDir" == "" ]]; then
		echo 0
	else
		echo 1
	fi
}

getCurrentToolboxName() {
	cat /run/.containerenv | grep name | cut -d= -f2 | cut -d\" -f2
}

getCurrentGitBranch() {
	echo "$(git rev-parse --abbrev-ref HEAD 2> /dev/null)"
}

################################################################################
# Aliases
################################################################################

alias ls="eza -al --color=auto --group-directories-first"
alias grep="grep --color=auto"
alias cat="bat"
alias s="source ~/.bashrc"
alias e="nvim -O ~/.bashrc ~/.bashrc_common ~/.bashrc_local"
